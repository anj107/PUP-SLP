// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pupslp_tickets.Models;

#nullable disable

namespace pupslp_tickets.Migrations
{
    [DbContext(typeof(DbModel))]
    partial class DbModelModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("RegPaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("regPaymentMode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("regProofPayment")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("regPaymentModels");
                });

            modelBuilder.Entity("pupslp_tickets.Models.AccountLoginModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PasswordResetTokenExpiry")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecoveryEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("accountLoginModel");
                });

            modelBuilder.Entity("pupslp_tickets.Models.AttendanceDashboardModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("attendance")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("attendanceDashboardModels");
                });

            modelBuilder.Entity("pupslp_tickets.Models.DashboardOverviewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("attendeesPerShow")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("soldTotalTickets")
                        .HasColumnType("TEXT");

                    b.Property<int>("totalAttendees")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("dashboardOverviewModel");
                });

            modelBuilder.Entity("pupslp_tickets.Models.EventDetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("eventCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("eventDates")
                        .HasColumnType("TEXT");

                    b.Property<string>("eventDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("eventPosterUrl")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("eventPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("eventTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("eventVenue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("hmContactInfo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("hmName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("eventDetailsModel");
                });

            modelBuilder.Entity("pupslp_tickets.Models.RegTicketModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAttended")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RegistrationFormModelId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("regTicketDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("regTicketQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("regVenue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ticketNumber")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("ticketSched")
                        .HasColumnType("TEXT");

                    b.Property<string>("ticketType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationFormModelId");

                    b.ToTable("regTicketModels");
                });

            modelBuilder.Entity("pupslp_tickets.Models.RegUserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("dataPrivacyConsent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("regContactNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("regEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("regInvitedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("regName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("regUniv")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("regUserModels");
                });

            modelBuilder.Entity("pupslp_tickets.Models.RegistrationFormModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventDetailsModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RegPaymentModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RegUserModelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EventDetailsModelId");

                    b.HasIndex("RegPaymentModelId");

                    b.HasIndex("RegUserModelId");

                    b.ToTable("registrationFormModel");
                });

            modelBuilder.Entity("pupslp_tickets.Models.RegTicketModel", b =>
                {
                    b.HasOne("pupslp_tickets.Models.RegistrationFormModel", "RegistrationFormModel")
                        .WithMany("RegTicketModels")
                        .HasForeignKey("RegistrationFormModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegistrationFormModel");
                });

            modelBuilder.Entity("pupslp_tickets.Models.RegistrationFormModel", b =>
                {
                    b.HasOne("pupslp_tickets.Models.EventDetailsModel", "EventDetailsModel")
                        .WithMany()
                        .HasForeignKey("EventDetailsModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RegPaymentModel", "RegPaymentModel")
                        .WithMany()
                        .HasForeignKey("RegPaymentModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pupslp_tickets.Models.RegUserModel", "RegUserModel")
                        .WithMany()
                        .HasForeignKey("RegUserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventDetailsModel");

                    b.Navigation("RegPaymentModel");

                    b.Navigation("RegUserModel");
                });

            modelBuilder.Entity("pupslp_tickets.Models.RegistrationFormModel", b =>
                {
                    b.Navigation("RegTicketModels");
                });
#pragma warning restore 612, 618
        }
    }
}
